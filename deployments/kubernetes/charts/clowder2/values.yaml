hostname: clowder2-test.icecube.aq

imagePullSecrets: [name: regcred-aq]
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: true
  className: clowder2-test
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns01-prod"
  tls:
    - secretName: clowder2-test-tls
      hosts:
        - clowder2-test.icecube.aq

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# ----------------------------------------------------------------------
# FRONTEND
# ----------------------------------------------------------------------
frontend:
  image:
    repository: clowder/clowder2-frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  service:
    type: ClusterIP
    port: 80

# ----------------------------------------------------------------------
# BACKEND
# ----------------------------------------------------------------------
backend:
  image:
    repository: i3registry.icecube.aq/clowder2-backend-local
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.1"

  service:
    type: ClusterIP
    port: 80

# ----------------------------------------------------------------------
# GEOSERVER
# ----------------------------------------------------------------------
geoserver:
  enabled : true
  username: admin
  password: admin
  workspace: clowder2
  url: http://clowder2-geoserver:8080/geoserver/
  replicas: 1
  image:
    repository: kartoza/geoserver
    tag: 2.17.2
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  persistence:
    storageClass: csi-cephfs-sc
    size: 8Gi

# ----------------------------------------------------------------------
# MINIO
# ----------------------------------------------------------------------
minio:
  enabled: true

  # login to minio
  auth:
    rootUser: minioadmin
    rootPassword: minioadmin
    
  # enable webui
  disableWebUI: false

  containerPorts:
    api: 9000
    console: 9001

  # enable ingress for webui
  ingress:
    enabled: true
    hostname: minio.clowder2.localhost

  # enable ingress for api
  apiIngress:
    enabled: true
    hostname: minio-api.clowder2.localhost

  # enabled distributed mode (or standalone)
#  mode: distributed
  mode: standalone

  # if you pick distributed, this needs to be >= 4
  statefulset:
#    replicaCount: 4
    replicaCount: 1

  # persistence
  persistence:
    # storage size for the data
    size: 20Gi
    storageClass: csi-cephfs-sc
  service:
    type: ClusterIP

# ----------------------------------------------------------------------
# MONGODB
# ----------------------------------------------------------------------
mongodb:
  # either mongodb is installed as part of this chart, or you need to
  # specify the mongodb uri
  enabled: true
  #uri: mongobd://server:27017/database
  database: clowder2

  # right now no password
  auth:
    enabled: false

  # storage
  persistence:
    # storage size for database
    size: 8Gi
    
    # pick fast non network storage
    storageClass: csi-cephfs-sc

# ----------------------------------------------------------------------
# RABBITMQ
# ----------------------------------------------------------------------
rabbitmq:
  # either rabbitmq is installed as part of this chart, or you need to
  # specify the rabbitmq uri. If neither is specified rabbitmq will not
  # be used by clowder.
  enabled: true
  #uri: amqp://username:password@server/database

  # login
  auth:
    username: guest
    password: guest
    erlangCookie: kittencookie

  # enable webfrontend
  ingress:
    enabled: true
    hostname: rabbitmq.clowder2.localhost

  persistence:
    # pick fast storage
    storageClass: csi-cephfs-sc

# ----------------------------------------------------------------------
# EXTRACTORS
# ----------------------------------------------------------------------

## list of extractors to be installed. Each extractor should have the
## following fields:
## enabled      : true/false - should the extractor be installed
## image        : dokeer/image:tag - the extractor docker image
## replicaCount : number - the number of this extractor to install
## env          : additional environment variables to pass to extractor.
extractors:
#  file-digest:
#    image: clowder/extractors-digest:2.2.4
#    # enabled: true
#    # replicaCount: 1
#    # pullPolicy: Always
#    # imagePullSecrets: regcred
#    # env:
#    #   - name: extractor.bump.sh
#    #     value: "bar"
  wordcount:
    image: clowder/extractors-wordcount:latest
    enabled: false
    replicaCount: 0
  image-preview:
    image: clowder/extractors-image-preview:latest
    enabled: false
    replicaCount: 0
  image-metadata:
    image: clowder/extractors-image-metadata:latest
    enabled: false
    replicaCount: 0
  audio-preview:
    image: clowder/extractors-audio-preview:latest
    enabled: false
    replicaCount: 0
  file-digest:
    image: i3registry.icecube.aq/extractors-digest-local:0.1
    imagePullSecrets: regcred-aq
  geotiff-preview:
    image: clowder/extractors-geotiff-preview:latest
    enabled: false
    replicaCount: 0

# ----------------------------------------------------------------------
# ELASTICSEARCH
# ----------------------------------------------------------------------
elasticsearch:
  clusterName: clowder2
  
  extraEnvVars: [es-additional-env]

  master:
    persistence:
      storageClass: csi-cephfs-sc
      size: 8Gi
  data:
    persistence:
      storageClass: csi-cephfs-sc
      size: 8Gi


# ----------------------------------------------------------------------
# KEYCLOAK
# ----------------------------------------------------------------------
keycloak:
  hostname: keycloak.icecube.wisc.edu/auth
  realm: IceCube
  clientid: clowder2-backend
  redirect_uri: https://clowder2.icecube.aq/api/v2/auth
  auth_url: https://keycloak.icecube.wisc.edu/auth/realms/IceCube/protocol/openid-connect/auth
  token_url: https://keycloak.icecube.wisc.edu/auth/realms/IceCube/protocol/openid-connect/userinfo
  userinfo_url: https://keycloak.icecube.wisc.edu/auth/realms/IceCube/protocol/openid-connect/userino

# ----------------------------------------------------------------------
# OTHERS
# ----------------------------------------------------------------------

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}